<div class="container-fluid">
    <EditForm EditContext="@EditContext">
        <DataAnnotationsValidator/>

        <div class="m-1">
            <ContentSection Content="@Model.Content"/>
        </div>

        <div class="row m-1">
            @foreach (var deadline in Model.Deadlines)
            {
                <DeadlinesSection Deadline="@deadline" OnRemove="@(() => Model.Deadlines.Remove(deadline))"/>
            }

            @foreach (var time in Model.ExecutionTimes)
            {
                <ExecutionTimeSection ExecutionTime="@time" OnRemove="@(() => Model.ExecutionTimes.Remove(time))"/>
            }

            @foreach (var iterations in Model.Iterations)
            {
                <IterationsSection Iterations="@iterations" OnRemove="@(() => Model.Iterations.Remove(iterations))"/>
            }

            @foreach (var metric in Model.Metrics)
            {
                <MetricsSection Metric="@metric" OnRemove="@(() => Model.Metrics.Remove(metric))"/>
            }

            @* TODO: Add sections for reference management *@
        </div>
    </EditForm>
</div>

@code
{
#pragma warning disable 8618
    [CascadingParameter]
    public Todo Model { get; set; }

    [Parameter]
    public string Title { get; set; }

    private EditContext EditContext { get; set; }
#pragma warning restore 8618

    protected override void OnParametersSet()
    {
        if (Model == null)
        {
            throw new ArgumentException("Model is null", nameof(Model));
        }

        EditContext = new EditContext(Model);
    }
}
